{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport axios from \"axios\";\nconst axiosBaseQuery = function () {\n  let {\n    baseUrl\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    baseUrl: \"\"\n  };\n  return async _ref => {\n    let {\n      url,\n      method,\n      data\n    } = _ref;\n    axios.defaults.withCredentials = true;\n    const user = localStorage.getItem(\"user\");\n    // if (user) {\n    //   axios.defaults.headers[\"x-access-token\"] = JSON.parse(user).token;\n    // }\n    axios.defaults.headers[\"Content-type\"] = \"application/json\";\n    try {\n      const result = await axios({\n        url: baseUrl + url,\n        method,\n        data\n      });\n      return {\n        data: result.data\n      };\n    } catch (axiosError) {\n      var _err$response, _err$response2;\n      let err = axiosError;\n      return {\n        error: {\n          status: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status,\n          data: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n        }\n      };\n    }\n  };\n};\nexport const api = createApi({\n  baseQuery: axiosBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API}/api`\n  }),\n  endpoints: () => ({}),\n  reducerPath: \"api\"\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","axios","axiosBaseQuery","baseUrl","url","method","data","defaults","withCredentials","user","localStorage","getItem","headers","result","axiosError","err","error","status","response","api","baseQuery","process","env","REACT_APP_API","endpoints","reducerPath"],"sources":["/Users/ibrahimad/Desktop/start/cam/src/redux/authApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport axios from \"axios\";\n\nconst axiosBaseQuery =\n  ({ baseUrl } = { baseUrl: \"\" }) =>\n  async ({ url, method, data }) => {\n    axios.defaults.withCredentials = true;\n    const user = localStorage.getItem(\"user\");\n    // if (user) {\n    //   axios.defaults.headers[\"x-access-token\"] = JSON.parse(user).token;\n    // }\n    axios.defaults.headers[\"Content-type\"] = \"application/json\";\n    try {\n      const result = await axios({ url: baseUrl + url, method, data });\n      return { data: result.data };\n    } catch (axiosError) {\n      let err = axiosError;\n      return {\n        error: { status: err.response?.status, data: err.response?.data },\n      };\n    }\n  };\n\nexport const api = createApi({\n  baseQuery: axiosBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API}/api`,\n  }),\n  endpoints: () => ({}),\n  reducerPath: \"api\",\n});\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,mCAAmC;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAClB;EAAA,IAAC;IAAEC;EAAQ,CAAC,uEAAG;IAAEA,OAAO,EAAE;EAAG,CAAC;EAAA,OAC9B,cAAiC;IAAA,IAA1B;MAAEC,GAAG;MAAEC,MAAM;MAAEC;IAAK,CAAC;IAC1BL,KAAK,CAACM,QAAQ,CAACC,eAAe,GAAG,IAAI;IACrC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC;IACA;IACA;IACAV,KAAK,CAACM,QAAQ,CAACK,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;IAC3D,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMZ,KAAK,CAAC;QAAEG,GAAG,EAAED,OAAO,GAAGC,GAAG;QAAEC,MAAM;QAAEC;MAAK,CAAC,CAAC;MAChE,OAAO;QAAEA,IAAI,EAAEO,MAAM,CAACP;MAAK,CAAC;IAC9B,CAAC,CAAC,OAAOQ,UAAU,EAAE;MAAA;MACnB,IAAIC,GAAG,GAAGD,UAAU;MACpB,OAAO;QACLE,KAAK,EAAE;UAAEC,MAAM,mBAAEF,GAAG,CAACG,QAAQ,kDAAZ,cAAcD,MAAM;UAAEX,IAAI,oBAAES,GAAG,CAACG,QAAQ,mDAAZ,eAAcZ;QAAK;MAClE,CAAC;IACH;EACF,CAAC;AAAA;AAEH,OAAO,MAAMa,GAAG,GAAGpB,SAAS,CAAC;EAC3BqB,SAAS,EAAElB,cAAc,CAAC;IACxBC,OAAO,EAAG,GAAEkB,OAAO,CAACC,GAAG,CAACC,aAAc;EACxC,CAAC,CAAC;EACFC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;EACrBC,WAAW,EAAE;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}