{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimad/Desktop/start/cam/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { AdminRoutes, ClientRoutes } from \"./routes/\";\nimport { isAuthenticated } from \"./redux/store/authStore\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const isAuth = useSelector(isAuthenticated);\n  console.log(\"ISAuth\", isAuth);\n  // return <div>{isAuth ? <AdminRoutes /> : <ClientRoutes />}</div>;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AdminRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AdminRoutes","ClientRoutes","isAuthenticated","useSelector","App","isAuth","console","log"],"sources":["/Users/ibrahimad/Desktop/start/cam/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { AdminRoutes, ClientRoutes } from \"./routes/\";\nimport { isAuthenticated } from \"./redux/store/authStore\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const isAuth = useSelector(isAuthenticated);\n  console.log(\"ISAuth\", isAuth);\n  // return <div>{isAuth ? <AdminRoutes /> : <ClientRoutes />}</div>;\n  return <div>{<AdminRoutes />}</div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,YAAY,QAAQ,WAAW;AACrD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,MAAM,GAAGF,WAAW,CAACD,eAAe,CAAC;EAC3CI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC7B;EACA,oBAAO;IAAA,uBAAM,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAAO;AACrC;AAAC,GALQD,GAAG;EAAA,QACKD,WAAW;AAAA;AAAA,KADnBC,GAAG;AAOZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}