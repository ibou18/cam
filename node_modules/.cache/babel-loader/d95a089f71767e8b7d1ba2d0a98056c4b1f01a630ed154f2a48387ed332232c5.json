{"ast":null,"code":"import { api } from \"../authApi\";\nexport const authAction = api.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: data => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        data\n      })\n    }),\n    register: builder.mutation({\n      query: data => ({\n        url: \"/users/register\",\n        method: \"POST\",\n        data\n      })\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: \"/users/logout\",\n        method: \"GET\"\n      })\n    }),\n    verifyToken: builder.query({\n      query: token => ({\n        url: `/users/checkdemandeur/${token}`,\n        method: \"get\"\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useRegisterMutation,\n  useVerifyTokenQuery,\n  useLogoutMutation\n} = authAction;","map":{"version":3,"names":["api","authAction","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","register","logout","verifyToken","token","useLoginMutation","useRegisterMutation","useVerifyTokenQuery","useLogoutMutation"],"sources":["/Users/ibrahimad/Desktop/start/cam/src/redux/action/authAction.js"],"sourcesContent":["import { api } from \"../authApi\";\n\nexport const authAction = api.injectEndpoints({\n  endpoints: (builder) => ({\n    login: builder.mutation({\n      query: (data) => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        data,\n      }),\n    }),\n    register: builder.mutation({\n      query: (data) => ({\n        url: \"/users/register\",\n        method: \"POST\",\n        data,\n      }),\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: \"/users/logout\",\n        method: \"GET\",\n      }),\n    }),\n    verifyToken: builder.query({\n      query: (token) => ({\n        url: `/users/checkdemandeur/${token}`,\n        method: \"get\",\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useLoginMutation,\n  useRegisterMutation,\n  useVerifyTokenQuery,\n  useLogoutMutation,\n} = authAction;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,YAAY;AAEhC,OAAO,MAAMC,UAAU,GAAGD,GAAG,CAACE,eAAe,CAAC;EAC5CC,SAAS,EAAGC,OAAO,KAAM;IACvBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE,MAAM;QACdF;MACF,CAAC;IACH,CAAC,CAAC;IACFG,QAAQ,EAAEP,OAAO,CAACE,QAAQ,CAAC;MACzBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,iBAAiB;QACtBC,MAAM,EAAE,MAAM;QACdF;MACF,CAAC;IACH,CAAC,CAAC;IACFI,MAAM,EAAER,OAAO,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAE,OAAO;QACZE,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFG,WAAW,EAAET,OAAO,CAACG,KAAK,CAAC;MACzBA,KAAK,EAAGO,KAAK,KAAM;QACjBL,GAAG,EAAG,yBAAwBK,KAAM,EAAC;QACrCJ,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXK,gBAAgB;EAChBC,mBAAmB;EACnBC,mBAAmB;EACnBC;AACF,CAAC,GAAGjB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}